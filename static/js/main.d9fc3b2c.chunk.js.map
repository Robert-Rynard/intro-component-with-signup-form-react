{"version":3,"sources":["components/Input.js","components/Form.js","App.js","reportWebVitals.js","index.js"],"names":["Input","props","useState","isValid","setIsValid","input","placeholder","errorMessage","setErrorMessage","className","cn","onChange","value","userData","name","onBlur","event","target","test","required","inputs","type","id","Form","fName","lName","email","password","setUserData","inputHandler","map","href","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"mQA4CeA,EAxCD,SAACC,GACb,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAwCF,mBACtCD,EAAMI,MAAMC,YAAc,oBAD5B,mBAAOC,EAAP,KAAqBC,EAArB,KAsBA,OACE,qBACEC,UAAWC,IAAG,CAAE,mBAAoBP,IACpC,qBAAoBI,EAFtB,SAIE,iDACMN,EAAMI,OADZ,IAEEM,SAAUV,EAAMU,SAChBC,MAAOX,EAAMY,SAASZ,EAAMI,MAAMS,MAClCC,OA3BkB,SAACC,GACnBA,EAAMC,OAAOL,MACfR,GAAW,IAEXI,EAAgBP,EAAMI,MAAMC,YAAc,oBAC1CF,GAAW,IAGa,UAAtBY,EAAMC,OAAOH,MAAoBE,EAAMC,OAAOL,QAC5C,eAAeM,KAAKF,EAAMC,OAAOL,OACnCR,GAAW,IAEXI,EAAgB,oCAChBJ,GAAW,MAeXe,UAAQ,QClCVC,EAAS,CACb,CACEN,KAAM,QACNL,UAAW,eACXY,KAAM,OACNC,GAAI,EACJhB,YAAa,cAEf,CACEQ,KAAM,QACNL,UAAW,eACXY,KAAM,OACNC,GAAI,EACJhB,YAAa,aAEf,CACEQ,KAAM,QACNL,UAAW,mCACXY,KAAM,QACNC,GAAI,EACJhB,YAAa,iBAEf,CACEQ,KAAM,WACNL,UAAW,eACXY,KAAM,WACNC,GAAI,EACJhB,YAAa,aAyCFiB,EArCF,WACX,MAAgCrB,mBAAS,CACvCsB,MAAO,GACPC,MAAO,GACPC,MAAO,GACPC,SAAU,KAJZ,mBAAOd,EAAP,KAAiBe,EAAjB,KAOMC,EAAe,SAAC,GAAiC,IAAD,IAA9BZ,OAAUL,EAAoB,EAApBA,MAAOE,EAAa,EAAbA,KACvCc,GAAY,SAACvB,GAAD,mBAAC,eAAgBA,GAAjB,kBAAyBS,EAAOF,QAG9C,OACE,qBAAKH,UAAU,OAAf,SACE,uBAAMA,UAAU,cAAhB,UACGW,EAAOU,KAAI,SAACzB,GAAD,OACV,cAAC,EAAD,CAEEA,MAAOA,EACPM,SAAUkB,EACVhB,SAAUA,GAHLR,EAAMiB,OAOf,wBAAQb,UAAU,mBAAmBY,KAAK,SAA1C,mCAIA,oBAAGZ,UAAU,mBAAb,4DACkD,IAChD,mBAAGsB,KAAK,IAAR,yCCxCKC,MArBf,WACE,OACE,sBAAKvB,UAAU,OAAf,UACE,sBAAKA,UAAU,OAAf,UACE,oBAAIA,UAAU,cAAd,8CACA,mBAAGA,UAAU,aAAb,wKAMF,qBAAKA,UAAU,MAAf,SACE,8BACE,wDADF,gCAIF,cAAC,EAAD,QCRSwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDZ,M","file":"static/js/main.d9fc3b2c.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport cn from \"classnames\";\r\n\r\nconst Input = (props) => {\r\n  const [isValid, setIsValid] = useState(true);\r\n  const [errorMessage, setErrorMessage] = useState(\r\n    props.input.placeholder + \" cannot be empty\"\r\n  );\r\n\r\n  const validityHandler = (event) => {\r\n    if (event.target.value) {\r\n      setIsValid(true);\r\n    } else {\r\n      setErrorMessage(props.input.placeholder + \" cannot be empty\");\r\n      setIsValid(false);\r\n    }\r\n\r\n    if (event.target.name === \"email\" && event.target.value) {\r\n      if (/\\S+@\\S+\\.\\S+/.test(event.target.value)) {\r\n        setIsValid(true);\r\n      } else {\r\n        setErrorMessage(\" Looks like this is not an email\");\r\n        setIsValid(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={cn({ \"invalid-wrapper\": !isValid })}\r\n      data-error-message={errorMessage}\r\n    >\r\n      <input\r\n        {...props.input}\r\n        onChange={props.onChange}\r\n        value={props.userData[props.input.name]}\r\n        onBlur={validityHandler}\r\n        required\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React, { useState } from \"react\";\r\n\r\nimport Input from \"./Input\";\r\n\r\nconst inputs = [\r\n  {\r\n    name: \"fName\",\r\n    className: \"signup-input\",\r\n    type: \"text\",\r\n    id: 1,\r\n    placeholder: \"First Name\",\r\n  },\r\n  {\r\n    name: \"lName\",\r\n    className: \"signup-input\",\r\n    type: \"text\",\r\n    id: 2,\r\n    placeholder: \"Last Name\",\r\n  },\r\n  {\r\n    name: \"email\",\r\n    className: \"signup-input signup-input--email\",\r\n    type: \"email\",\r\n    id: 3,\r\n    placeholder: \"Email Address\",\r\n  },\r\n  {\r\n    name: \"password\",\r\n    className: \"signup-input\",\r\n    type: \"password\",\r\n    id: 4,\r\n    placeholder: \"Password\",\r\n  },\r\n];\r\n\r\nconst Form = () => {\r\n  const [userData, setUserData] = useState({\r\n    fName: \"\",\r\n    lName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const inputHandler = ({ target: { value, name } }) => {\r\n    setUserData((input) => ({ ...input, [name]: value }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <form className=\"signup-form\">\r\n        {inputs.map((input) => (\r\n          <Input\r\n            key={input.id}\r\n            input={input}\r\n            onChange={inputHandler}\r\n            userData={userData}\r\n          />\r\n        ))}\r\n\r\n        <button className=\"signup-form__btn\" type=\"submit\">\r\n          Claim your free trial\r\n        </button>\r\n\r\n        <p className=\"signup-form__tos\">\r\n          By clicking the button, you are agreeing to our{\" \"}\r\n          <a href=\"/\">Terms and Services</a>\r\n        </p>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import \"./App.css\";\n\nimport Form from \"./components/Form\";\n\nfunction App() {\n  return (\n    <div className=\"grid\">\n      <div className=\"info\">\n        <h1 className=\"info__title\">Learn to code by watching others</h1>\n        <p className=\"info__body\">\n          See how experienced developers solve problems in real-time. Watching\n          scripted tutorials is great, but understanding how developers think is\n          invaluable.\n        </p>\n      </div>\n      <div className=\"cta\">\n        <p>\n          <strong>Try it free 7 days</strong> then $20/mo. thereafter\n        </p>\n      </div>\n      <Form />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}